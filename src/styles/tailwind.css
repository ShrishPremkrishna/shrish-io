@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --grain-opacity: 0.08;
}

/* Grain texture */
.grain {
  position: relative;
}
.grain::after {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 200 200"><filter id="n"><feTurbulence type="fractalNoise" baseFrequency=".9" numOctaves="2" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23n)" opacity="0.35"/></svg>');
  mix-blend-mode: overlay;
  opacity: var(--grain-opacity);
}

/* Geometric Pattern Background */
.geometric-pattern {
  position: relative;
  background: linear-gradient(135deg, #F7F3E7 0%, #E8F5E8 50%, #F7F3E7 100%);
}

.geometric-pattern::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 20% 80%, rgba(212, 175, 55, 0.15) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(139, 69, 19, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(34, 139, 34, 0.08) 0%, transparent 50%),
    linear-gradient(45deg, transparent 30%, rgba(212, 175, 55, 0.05) 30%, rgba(212, 175, 55, 0.05) 70%, transparent 70%),
    linear-gradient(-45deg, transparent 30%, rgba(139, 69, 19, 0.03) 30%, rgba(139, 69, 19, 0.03) 70%, transparent 70%);
  background-size: 
    400px 400px,
    300px 300px,
    500px 500px,
    100px 100px,
    80px 80px;
  /* Removed float animation to allow pointer-driven transforms */
  transform: translate3d(calc(var(--mx, 0) * 24px), calc(var(--my, 0) * 24px), 0);
  transition: transform 180ms ease-out;
  will-change: transform;
}

.geometric-pattern::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent 40px,
      rgba(212, 175, 55, 0.02) 40px,
      rgba(212, 175, 55, 0.02) 42px
    ),
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 40px,
      rgba(139, 69, 19, 0.02) 40px,
      rgba(139, 69, 19, 0.02) 42px
    );
  pointer-events: none;
  transform: translate3d(calc(var(--mx, 0) * 12px), calc(var(--my, 0) * 12px), 0);
  transition: transform 220ms ease-out;
  will-change: transform;
}

/* About Section Geometric Pattern */
.geometric-pattern-about {
  position: relative;
  background: linear-gradient(135deg, #F7F3E7 0%, #F0F8F0 50%, #F7F3E7 100%);
}

.geometric-pattern-about::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    /* Hexagon pattern */
    radial-gradient(circle at 25% 25%, rgba(212, 175, 55, 0.08) 0%, transparent 30%),
    radial-gradient(circle at 75% 75%, rgba(139, 69, 19, 0.06) 0%, transparent 30%),
    radial-gradient(circle at 50% 10%, rgba(34, 139, 34, 0.05) 0%, transparent 25%),
    radial-gradient(circle at 10% 60%, rgba(212, 175, 55, 0.04) 0%, transparent 20%),
    radial-gradient(circle at 90% 40%, rgba(139, 69, 19, 0.03) 0%, transparent 20%),
    /* Triangle patterns */
    linear-gradient(60deg, transparent 40%, rgba(212, 175, 55, 0.03) 40%, rgba(212, 175, 55, 0.03) 60%, transparent 60%),
    linear-gradient(-60deg, transparent 40%, rgba(34, 139, 34, 0.02) 40%, rgba(34, 139, 34, 0.02) 60%, transparent 60%),
    /* Grid dots */
    radial-gradient(circle at 20% 20%, rgba(139, 69, 19, 0.04) 1px, transparent 1px),
    radial-gradient(circle at 80% 80%, rgba(212, 175, 55, 0.03) 1px, transparent 1px),
    radial-gradient(circle at 40% 60%, rgba(34, 139, 34, 0.02) 1px, transparent 1px);
  background-size: 
    120px 120px,
    100px 100px,
    150px 150px,
    80px 80px,
    90px 90px,
    60px 60px,
    70px 70px,
    40px 40px,
    50px 50px,
    30px 30px;
  /* Removed pulse animation for interactive transforms */
  transform: translate3d(calc(var(--mx, 0) * 18px), calc(var(--my, 0) * 18px), 0);
  transition: transform 180ms ease-out;
  will-change: transform;
}

.geometric-pattern-about::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    /* Subtle grid lines */
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent 60px,
      rgba(212, 175, 55, 0.01) 60px,
      rgba(212, 175, 55, 0.01) 62px
    ),
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 60px,
      rgba(139, 69, 19, 0.01) 60px,
      rgba(139, 69, 19, 0.01) 62px
    ),
    /* Diagonal accent lines */
    linear-gradient(30deg, transparent 45%, rgba(34, 139, 34, 0.015) 45%, rgba(34, 139, 34, 0.015) 55%, transparent 55%),
    linear-gradient(-30deg, transparent 45%, rgba(212, 175, 55, 0.01) 45%, rgba(212, 175, 55, 0.01) 55%, transparent 55%);
  pointer-events: none;
  transform: translate3d(calc(var(--mx, 0) * 9px), calc(var(--my, 0) * 9px), 0);
  transition: transform 220ms ease-out;
  will-change: transform;
}

/* Experience Section Geometric Pattern */
.geometric-pattern-experience {
  position: relative;
  background: linear-gradient(135deg, #F7F3E7 0%, #E8F5E8 30%, #F0F8F0 70%, #F7F3E7 100%);
}

.geometric-pattern-experience::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    /* Flowing organic shapes */
    radial-gradient(ellipse at 30% 20%, rgba(212, 175, 55, 0.12) 0%, transparent 40%),
    radial-gradient(ellipse at 70% 80%, rgba(139, 69, 19, 0.08) 0%, transparent 35%),
    radial-gradient(ellipse at 20% 70%, rgba(34, 139, 34, 0.06) 0%, transparent 30%),
    radial-gradient(ellipse at 80% 30%, rgba(212, 175, 55, 0.05) 0%, transparent 25%),
    /* Connecting lines */
    linear-gradient(45deg, transparent 35%, rgba(139, 69, 19, 0.04) 35%, rgba(139, 69, 19, 0.04) 65%, transparent 65%),
    linear-gradient(-45deg, transparent 35%, rgba(34, 139, 34, 0.03) 35%, rgba(34, 139, 34, 0.03) 65%, transparent 65%),
    /* Wave patterns */
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent 80px,
      rgba(212, 175, 55, 0.02) 80px,
      rgba(212, 175, 55, 0.02) 85px,
      transparent 85px,
      transparent 120px
    ),
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 80px,
      rgba(139, 69, 19, 0.015) 80px,
      rgba(139, 69, 19, 0.015) 85px,
      transparent 85px,
      transparent 120px
    ),
    /* Dotted connection paths */
    radial-gradient(circle at 15% 15%, rgba(212, 175, 55, 0.06) 2px, transparent 2px),
    radial-gradient(circle at 85% 85%, rgba(139, 69, 19, 0.04) 2px, transparent 2px),
    radial-gradient(circle at 50% 50%, rgba(34, 139, 34, 0.03) 1.5px, transparent 1.5px);
  background-size: 
    200px 150px,
    180px 120px,
    160px 100px,
    140px 90px,
    100px 100px,
    120px 120px,
    200px 200px,
    200px 200px,
    60px 60px,
    80px 80px,
    40px 40px;
  /* Removed flow animation for interactive transforms */
  transform: translate3d(calc(var(--mx, 0) * 22px), calc(var(--my, 0) * 22px), 0);
  transition: transform 180ms ease-out;
  will-change: transform;
}

.geometric-pattern-experience::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    /* Flowing curves */
    radial-gradient(ellipse at 25% 75%, transparent 0%, rgba(212, 175, 55, 0.02) 20%, transparent 40%),
    radial-gradient(ellipse at 75% 25%, transparent 0%, rgba(34, 139, 34, 0.015) 20%, transparent 40%),
    /* Connection dots */
    radial-gradient(circle at 10% 90%, rgba(139, 69, 19, 0.03) 1px, transparent 1px),
    radial-gradient(circle at 90% 10%, rgba(212, 175, 55, 0.025) 1px, transparent 1px),
    radial-gradient(circle at 30% 60%, rgba(34, 139, 34, 0.02) 1px, transparent 1px),
    radial-gradient(circle at 70% 40%, rgba(139, 69, 19, 0.02) 1px, transparent 1px);
  background-size: 
    300px 200px,
    250px 150px,
    50px 50px,
    60px 60px,
    40px 40px,
    45px 45px;
  /* Removed reverse flow animation for interactive transforms */
  transform: translate3d(calc(var(--mx, 0) * 10px), calc(var(--my, 0) * 10px), 0);
  transition: transform 220ms ease-out;
  will-change: transform;
}


